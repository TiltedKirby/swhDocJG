[{"content":"First Day\u003e First Day # On the first day we learned some basics about the Arduino microcontroller and how to connect it so we can program it. We got a starterkit and started trying out different things. The starterkit First I started to make the example we got shown of an LED blinking. I connected the LED and a resistor on the breadboard and connected them to the Arduino. I then modified the example code of an internal LED blinking to set it on the pin I connected to the LED. The LED connected to the Arduino The next thing I wanted to try is using a servomotor (as it is also useful for my project). I connected the VCC and GND pins to the corresponding pins on the Arduino and connected the third pin to a digital output pin on the Arduino. I looked up a library that automatically converts a degree input in the code to a Pulse Wide Modulation (PWM) signal and used it to let the motor spin to 180° and back to 0°. The servomotor connected to the Arduino After I saw a joystick in the starterkit I wanted to control the servomotor with it. For that I needed to connect the joystick to two analog inputs. One input was for the x-axis and one was for the y-axis. I converted the signal of the x-axis to have a range between 0° and 180° and send that value to the servomotor. I still hat the y-axis doing nothing though so I decided to use it to control a stepper motor. For the steppermotor I needed a motorcontroller chip which I could just connect to the arduino and with the help of yet another library I could spin the stepper motor in both directions.\nThe joystick controlling both the servomotor and the stepper motor I still wanted to try a sensor so I decided to use an ultrasonic sensor to detect if something was closer than 10cm and if that was the case to set the servomotor to 180°. The sensor is connected to the Arduino with two pins: One serving as a trigger and one serving as an echo. To calculate the distance of an object in front of it I send a signal to the trigger pin for 10ms and waited for a signal to come in through the echo pin. With the speed of sound the duration it took for the echo pin to get a signal I could calculate the distance and then just checked if it was less than 10cm. The ultrasonic sensor connected to the Arduino Closeup of the ultrasonic sensor Second Day\u003e Second Day # The Second Day working with the Arduino I decided to try out the Bluetooth module. For that I used the SoftwareSerial library and set it to the two pins I connected the RX and TX of the module. Now I could use that serial to recieve and transmit messages to and from the module. To connect to it I downloaded a free app designed for Arduino Bluetooth testing purposes. The Bluetooth module connected to the Arduino Another angle of the Bluetooth module I then programmed it to control the motors like on the first day so I could control them with my phone. I also switched the stepper motor with a universal brushed motor because that\u0026rsquo;s what I am going to need for the project. The motorcontroller of that motor didn\u0026rsquo;t work right away though so the rest of the day was spent troubleshooting. The universal brushed motor connected to the Arduino Third Day\u003e Third Day # To better control the motors exactly how I want to I made an Android app to connect to the Bluetooth module. I used a slider to control the steering and two buttons to control driving forwards/backwards. The Bluetooth Controller app Unfortunately it had a few bugs still and couldn\u0026rsquo;t connect to the Bluetooth module properly so I decided to look into interrupts. I took my code from the first day where the servomotor spins to 180° and back to 0° and assigned a button as an interrupt so I could stop the loop with a press of the button, which to be fair could be implemented without an interrupt the way I did it but it was only to try it out. A button connected to the Arduino All in all I would say I learned a lot about microcontrollers and programming the Arduino and I probably got all the knowledge I need for my project.\nInterrupts\u003e Interrupts # Here I\u0026rsquo;m going to explain interrupts in more detail. In general the code of a microcontroller is run inside a loop and an interrupt is a way to, as the name suggests, interrupt the loop while some other predefined code gets executed. As an example I show the code I used for the test mentioned above:\n#include \u0026lt;Servo.h\u0026gt; Servo servo; #define button 3; bool stop = false; void setup() { Serial.begin(9600); servo.attach(2); pinMode(button, INPUT); attachInterrupt(1, interruptTest, FALLING); } void loop() { if (!stop) { servo.write(180); delay(1000); servo.write(0); delay(1000); } } void interruptTest() { Serial.println(\u0026#34;interrupted\u0026#34;); stop = !stop; } The interrupt can be attached to two pins: pin 2 and pin 3, which correspond to 0 and 1 in the attachInterrupt() method. I connected the button to pin 2 so I put in 1. Then I assigned the method interruptTest() to that interrupt and defined that it only gets triggered with a falling impulse.\nAnother use of the interrupt is to wake the Arduino while it is in sleep mode. To put the Arduino in sleep mode we can use the following code:\n#include \u0026lt;avr/sleep.h\u0026gt; void isrAwake(void) { detachInterrupt(0); } void enterSleepMode(void) { attachInterrupt(0, isrAwake, FALLING); set_sleep_mode(SLEEP_MODE_PWR_DOWN); sleep_enable(); sleep_mode(); sleep_disable(); } void setup() { } void loop() { if (!stop) { servo.write(180); delay(1000); servo.write(0); delay(1000); } } void interruptTest() { Serial.println(\u0026#34;interrupted\u0026#34;); stop = !stop; } This code wakes the Arduino when pin 2 get a signal.\n","date":"6 December 2022","permalink":"/swhDocJG/posts/microcontroller/","section":"Posts","summary":"First Day\u003e First Day # On the first day we learned some basics about the Arduino microcontroller and how to connect it so we can program it. We got a starterkit and started trying out different things.","title":"Microcontroller"},{"content":"","date":"6 December 2022","permalink":"/swhDocJG/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"6 December 2022","permalink":"/swhDocJG/","section":"Sketching with Hardware","summary":"","title":"Sketching with Hardware"},{"content":"The E-Tech Lab\u003e The E-Tech Lab # The first meeting in the lab we learned about electrical engineering. First, Johannes told us a few quick things about the history. Then he taught us the basics of electrical circuits like amperage, voltage and resistance and their correlation to one another. After that we learnt how to measure these things with a multimeter.\nThe next step for us was soldering. We got a soldering board and some components to solder on. We were soldering without lead so the first step after putting the component into the board was to apply some flux to get the solder onto the board. Then we could just hold the soldering iron on the board and put some solder on it. The first two components soldered onto the board All components soldered onto the board A resistor connected to a multimeter The next task was to use a multimeter to measure voltage and amperage to calculate the resistance. For that we used a breadboard to build a circuit where we connected the voltage-multimeter parallel to the resistor and the amperage-multimeter in series to the resistor. The circuit without the amperage-multimeter connected Then we measured the amperage and voltage for different settings in the power adapter and noted everything down. When we got enough data we calculated the resistance of the resistor for every setting and calculated the median. To check if our calculations and measurements were right we checked them against the resistance measurement of the multimeter and our calculated median was close to the actual value. Two resistors connected in series The last task was to calculate the resistance of a second resistor when the resistance of the first resistor is already given. So we did the measurements with a few settings again and then we transformed the given equation from the script to calculate the resitance. After checking the calculated value again with the measured resistance we got close to the value again.\nEven though I already soldered in the past and also built some circuits before, the lab was pretty useful to fresh up on those things and also to have a reference to look at later for the project.\nMy project for the first semester\u003e My project for the first semester # Finally we get to the project I have chosen to do in the first semester. I have decided to go for the Battlebot and go for an aesthetic design like a 3D printed head. I also wanted to do the RetroPie Gamestation but ultimately I decided to take the project where I have a bit more freedom and have to program. My premature circuit looks as follows: Premature circuit board for the Battlebot ","date":"9 November 2022","permalink":"/swhDocJG/posts/etechlab/","section":"Posts","summary":"The E-Tech Lab\u003e The E-Tech Lab # The first meeting in the lab we learned about electrical engineering. First, Johannes told us a few quick things about the history. Then he taught us the basics of electrical circuits like amperage, voltage and resistance and their correlation to one another.","title":"E-Tech Lab"},{"content":"Welcome to my documentation of the course \u0026ldquo;Sketching with Hardware\u0026rdquo;!\nMy name is Jeremy Gopp and I\u0026rsquo;m currently in my 7th semester of studying Mediainformatics at the Ulm University.\nI chose this course to broaden my horizons, as I only worked with software in the past and getting to know the hardware side of things might be beneficial to me and also it seems like it will be fun!\nIf I could already build my own hardware projects, I would probably build something to enhance my workflow on the projects I\u0026rsquo;m currently working on, as the need arises. For example the FreeDeck I presented in the second meeting to have easily accessable shortcuts or a note stand that tracks what notes I hit and with what delay from a predefined notesheet.\n","date":"8 November 2022","permalink":"/swhDocJG/posts/introduction/","section":"Posts","summary":"Welcome to my documentation of the course \u0026ldquo;Sketching with Hardware\u0026rdquo;!\nMy name is Jeremy Gopp and I\u0026rsquo;m currently in my 7th semester of studying Mediainformatics at the Ulm University.\nI chose this course to broaden my horizons, as I only worked with software in the past and getting to know the hardware side of things might be beneficial to me and also it seems like it will be fun!","title":"Introduction"},{"content":"","date":"1 January 0001","permalink":"/swhDocJG/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/swhDocJG/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/swhDocJG/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"1 January 0001","permalink":"/swhDocJG/tags/","section":"Tags","summary":"","title":"Tags"}]